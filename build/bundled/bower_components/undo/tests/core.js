module("core");var NameChange=Undo.Command.extend({constructor:function(e,n){NameChange.__super__.constructor("Name change to "+n),this.object=e,this.oldName=e.name,this.newName=n},execute:function(){this.object.name=this.newName},undo:function(){this.object.name=this.oldName}});test("Command.extend",function(){var e={name:"Peter"},n=new NameChange(e,"Pan");equal(n.name,"Name change to Pan"),equal(e.name,"Peter"),n.execute(),equal(e.name,"Pan"),n.undo(),equal(e.name,"Peter"),n.redo(),equal(e.name,"Pan")}),test("Stack",function(){var e={name:"Peter"},n=new NameChange(e,"Pawn"),a=new Undo.Stack;a.execute(n),equal(e.name,"Pawn"),ok(a.dirty()),ok(a.canUndo()),ok(!a.canRedo()),a.save(),ok(!a.dirty()),ok(a.canUndo()),ok(!a.canRedo()),a.undo(),equal(e.name,"Peter"),ok(a.dirty()),ok(!a.canUndo()),ok(a.canRedo()),a.redo(),equal(e.name,"Pawn"),ok(!a.dirty()),ok(a.canUndo()),ok(!a.canRedo())}),test("Stack._clearRedo",function(){var e={name:"Peter"},n=new NameChange(e,"p0wn"),a=new Undo.Stack;a.execute(n),a.execute(n),a.execute(n),a.undo(),a.undo(),a.undo(),a.execute(n),ok(!a.canRedo())});